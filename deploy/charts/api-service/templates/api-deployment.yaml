apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.hosting.service }}.{{ .Values.hosting.organization }}"
  labels:
    app: "{{ .Values.hosting.service }}.{{ .Values.hosting.organization }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Values.hosting.service }}.{{ .Values.hosting.organization }}"
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: "{{ .Values.hosting.service }}.{{ .Values.hosting.organization }}"
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: service
          image: "{{.Values.image.repository }}:{{.Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          env:
            - name: MONGO_ADDRESS
              value: mongodb://{{ .Values.hosting.organization }}-mongodb:27017
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-auth
                  key: username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-auth
                  key: password
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.path }}
            {{- end }}
            - name: config
              mountPath: {{ .Values.config.path }}
      restartPolicy: Always
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}.pvc
        {{- end }}
        - name: config
          secret:
            secretName: identity-{{ .Values.hosting.organization }}-hlf-connection
