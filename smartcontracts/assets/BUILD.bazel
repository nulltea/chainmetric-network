load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("//build/docker:multiarch.bzl", "multiarch_image")

go_library(
    name = "assets_lib",
    srcs = [
        "contract.go",
        "main.go",
    ],
    importpath = "github.com/timoth-y/chainmetric-network/smartcontracts/assets",
    visibility = ["//visibility:private"],
    deps = [
        "//smartcontracts/shared/core",
        "//smartcontracts/shared/model/couchdb",
        "//smartcontracts/shared/model/response",
        "//smartcontracts/shared/utils",
        "@com_github_hyperledger_fabric_chaincode_go//shim",
        "@com_github_hyperledger_fabric_contract_api_go//contractapi",
        "@com_github_hyperledger_fabric_protos_go//peer",
        "@com_github_pkg_errors//:errors",
        "@com_github_timoth_y_chainmetric_core//models",
        "@com_github_timoth_y_chainmetric_core//models/requests",
        "@com_github_timoth_y_chainmetric_core//utils",
        "@com_github_ztrue_shutdown//:shutdown",
    ],
)

go_binary(
    name = "assets",
    embed = [":assets_lib"],
    visibility = ["//visibility:public"],
)

go_image(
    name = "base_image",
    embed = [":assets_lib"],
    goarch = "arm64",
    goos = "linux",
    visibility = ["//visibility:public"],
)

container_image(
    name = "image",
    base = ":base_image",
    stamp = True,
    visibility = ["//visibility:public"],
)

multiarch_image(
    name = "multiacrh",
    base = "@alpine//image",
    embed = [":assets_lib"],
    goarch = [
        "amd64",
        "arm64",
    ],
    goos = ["linux"],
    visibility = ["//visibility:public"],
)
